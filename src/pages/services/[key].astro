---
import HeroServiceDetails from '../../components/sections/service/HeroServiceDetails.astro'
import BtnLink from '../../components/shared/BtnLink.astro'
import Container from '../../components/shared/Container.astro'
import Paragraph from '../../components/shared/Paragraph.astro'
import Title from '../../components/shared/Title.astro'
import Layout from '../../layouts/Layout.astro'
import { ServiceDetails } from '../../utils/service'
import Technologies from '../../components/sections/Technologies.astro'
import CTA from '../../components/sections/CTA.astro'
import { Image } from 'astro:assets'

export async function getStaticPaths() {
  return ServiceDetails.map((item) => ({
    params: { key: item.key },
    props: {
      data: ServiceDetails.filter((data) => data.key === item.key)
    }
  }))
}

const { data } = Astro.props
if (!data) return Astro.redirect('/404')
---

{
  data.map((item) => (
    <Layout
      title={`${item.metaTitle}`}
      description={item.metaDescription}
      image={item.image}
    >
      <main class='flex flex-col gap-y-20 md:gap-y-32 overflow-hidden'>
        <HeroServiceDetails
          title={item.title}
          description={item.description}
          image={item.image}
        />

        <section id='quote' class='text-center bg-gray-50 dark:bg-box-bg py-10'>
          <Container>
            <Title>
              {item.quote.heading[0]}
              <br />
              {item.quote.heading[1]}
            </Title>
            <Paragraph className='mt-8 mb-8 dark:text-gray-500'>
              {item.quote.description}
            </Paragraph>
            <BtnLink
              text='Request a quotation'
              href='/get-quote'
              className='flex justify-center w-full sm:w-max m-auto'
              variant='primary'
            />
          </Container>
        </section>

        <Container id='choose-us' className='text-center'>
          <Title>
            Why Choose us to <br /> {item.chooseUs.title}
          </Title>
          <Paragraph className='my-8'> {item.chooseUs.description}</Paragraph>
          <div class='flex items-center justify-center w-full h-full'>
            <div class='w-full relative flex items-center justify-center'>
              <button
                aria-label='slide backward'
                class='absolute z-30 left-0 ml-0 md:-ml-5 lg:-ml-10 focus:outline-none focus:bg-gray-400 focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 cursor-pointer'
                id='prev'
              >
                <svg
                  class='dark:text-white'
                  width='8'
                  height='14'
                  viewBox='0 0 8 14'
                  fill='none'
                  xmlns='http://www.w3.org/2000/svg'
                >
                  <path
                    d='M7 1L1 7L7 13'
                    stroke='currentColor'
                    stroke-width='2'
                    stroke-linecap='round'
                    stroke-linejoin='round'
                  />
                </svg>
              </button>
              <div class='w-full h-full mx-auto overflow-x-hidden overflow-y-hidden'>
                <div
                  id='slider'
                  class='h-full flex lg:gap-6 md:gap-4 gap-12 items-center justify-start transition ease-out duration-700'
                >
                  {item.chooseUs.types.map((choose) => (
                    <div class='flex flex-col flex-shrink-0 w-full sm:w-auto py-6 px-2'>
                      <div class='flex flex-col items-center justify-around bg-white dark:bg-box-bg bg-opacity-30 w-[90%] m-auto md:w-64 h-full p-6 rounded-lg shadow-lg'>
                        <h2 class='lg:text-xl font-semibold leading-4 text-base lg:leading-5 text-blue-950 dark:text-white mb-8'>
                          {choose.title}
                        </h2>
                        <div class='flex h-full items-end'>
                          <h3 class='text-sm lg:text-md leading-5 lg:leading-6 text-blue-950 dark:text-gray-500'>
                            {choose.description}
                          </h3>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              <button
                aria-label='slide forward'
                class='absolute z-30 right-0 mr-0 md:-mr-5 lg:-mr-10 focus:outline-none focus:bg-gray-400 focus:ring-2 focus:ring-offset-2 focus:ring-gray-400'
                id='next'
              >
                <svg
                  class='dark:text-white'
                  width='8'
                  height='14'
                  viewBox='0 0 8 14'
                  fill='none'
                  xmlns='http://www.w3.org/2000/svg'
                >
                  <path
                    d='M1 1L7 7L1 13'
                    stroke='currentColor'
                    stroke-width='2'
                    stroke-linecap='round'
                    stroke-linejoin='round'
                  />
                </svg>
              </button>
            </div>
          </div>
        </Container>

        <Container
          id='need'
          className='flex flex-col items-center lg:flex-row gap-10 lg:gap-12'
        >
          <div class='flex flex-1 justify-center lg:w-1/2 lg:h-auto relative lg:max-w-none lg:mx-0 mx-auto max-w-3xl'>
            <div class='p-5 rounded-full'>
              <Image
                src={item.body.image}
                alt={item.body.image}
                width='500'
                height='500'
                class='lg:w-12/12 lg:h-6/6 object-contain lg:max-h-none max-h-96'
              />
            </div>
          </div>
          <div class='flex-1'>
            <Title>{item.body.title}</Title>
            <Paragraph className='mt-8'>{item.body.description}</Paragraph>
          </div>
        </Container>

        <Container id='reason' className='text-center'>
          <Title>
            {item.steps.title[0]}
            <br />
            {item.steps.title[1]}
          </Title>
          <div class='grid gap-8 row-gap-0 lg:grid-cols-3 mt-8 lg:mt-16'>
            {item.steps.list.map((item, index) => (
              <div class='relative text-center'>
                <div class='flex items-center justify-center w-16 h-16 mx-auto mb-4 rounded-full bg-indigo-50 sm:w-20 sm:h-20'>
                  <p class='text-2xl font-extrabold text-blue-950 '>
                    {index + 1}
                  </p>
                </div>
                <span class='absolute w-52 aspect-[16/3] -skew-x-12 rounded-full bg-gradient-to-tr from-primary to-orange-400 opacity-40 blur-2xl left-0 right-0 top-0 m-auto' />
                <p class='inline-flex items-center font-semibold transition-colors duration-200 text-blue-950 dark:text-white'>
                  {item.title}
                </p>
                <p class='max-w-md mb-3 text-sm text-gray-500 sm:mx-auto'>
                  {item.description}
                </p>
              </div>
            ))}
          </div>
        </Container>
        <Technologies />
        <CTA />
      </main>
    </Layout>
  ))
}
<script is:inline>
  let defaultTransform = 0
  function goNext() {
    defaultTransform = defaultTransform - 398
    var slider = document.getElementById('slider')
    if (Math.abs(defaultTransform) >= slider.scrollWidth / 1.7)
      defaultTransform = 0
    slider.style.transform = 'translateX(' + defaultTransform + 'px)'
  }
  next.addEventListener('click', goNext)
  function goPrev() {
    var slider = document.getElementById('slider')
    if (Math.abs(defaultTransform) === 0) defaultTransform = 0
    else defaultTransform = defaultTransform + 398
    slider.style.transform = 'translateX(' + defaultTransform + 'px)'
  }
  prev.addEventListener('click', goPrev)
</script>
